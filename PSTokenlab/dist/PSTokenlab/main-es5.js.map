{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/new-event/new-event.component.ts","webpack:///src/app/new-event/new-event.component.html","webpack:///src/app/services/data.service.ts","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HomeComponent","dataService","dayOfweek","Date","getDay","weekDay","months","monthInteger","getMonth","currentYear","getFullYear","logged","eventsToList","markedDays","actionLoginText","setMonthIndex","setDaysInMonth","setCurrentMonth","setTimestamp","sessionStorage","getItem","user","JSON","parse","loginAuth","getEvents","getEventInterval","firstDayTimestamp","lastDayTimestamp","pipe","markDays","listEvents","subscribe","data","events","event","startDay","start","getDate","endDay","end","i","push","day","reduce","n","p","document","location","href","name","description","startDate","endDate","find","element","monthIndex","daysInMonth","getDaysInMonth","month","year","currentMonth","getTime","window","clear","reload","number","items","updateCalendar","nextM","prevM","LoginComponent","email","password","errorMsg","checklogged","localUrl","login","startSession","setItem","stringify","loginReq","NewEventComponent","startDateStr","endDateStr","eventError","strToDate","checkRequirements","creatorID","createEvent","DataService","_http","baseUrl","apiUrl","json","post","get","providedIn","SignupComponent","userCheck","signup","userError","signUser","environment","production","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NewEventComponent } from './new-event/new-event.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'signup', component: SignupComponent},\n  { path: 'newEvent', component: NewEventComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'PSTokenlab';\n}\n","\n\n<header>\n  <div class=\"container\">\n    <a href=\"#\" class=\"logo\"></a>\n  </div>\n</header>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { SignupComponent } from './signup/signup.component';\nimport { DataService } from './services/data.service';\nimport { NewEventComponent } from './new-event/new-event.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    SignupComponent,\n    NewEventComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Event } from './../models/event.model';\nimport { finalize } from 'rxjs/operators';\nimport { DataService } from './../services/data.service';\nimport { User } from './../models/user.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\n\nexport class HomeComponent implements OnInit {\n\n  user: User;\n  dayOfweek: number = new Date().getDay();\n  weekDay: string[] = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n  months: string[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  currentMonth: string;\n  monthInteger: number = new Date().getMonth() + 1;\n  currentYear: number = new Date().getFullYear();\n  daysInMonth: number;\n  monthIndex: number;\n  firstDayTimestamp: number;\n  lastDayTimestamp: number;\n  logged: number = 0;\n  events;\n  eventsToList: Event[] = [];\n  markedDays:number[] = [];\n  actionLoginText: string = \"Login\";\n\n\n  constructor(private dataService: DataService) {\n    this.setMonthIndex();\n    this.setDaysInMonth();\n    this.setCurrentMonth();\n    this.setTimestamp();\n  }\n\n  ngOnInit(): void {\n    if(sessionStorage.getItem('user')!=null){\n    this.user = JSON.parse(sessionStorage.getItem('user'))\n    this.logged = this.user.loginAuth;\n    if(this.logged){\n      this.getEvents();\n    }\n    }\n    else{\n      this.logged = 0;\n    }\n  }\n\n  getEvents(){\n    return this.dataService.getEventInterval(this.user.id, this.firstDayTimestamp, this.lastDayTimestamp)\n    .pipe(\n      finalize(() => {\n        this.markDays();\n        this.listEvents(0);\n      }))\n    .subscribe(data => {\n      this.events = data;\n    })\n  }\n\n  markDays(){\n    for(let event of this.events) {\n      let startDay = new Date(event.start).getDate();\n      let endDay = new Date(event.end).getDate();\n      for(let i=startDay; i<=endDay; i++){\n        this.markedDays.push(i);\n      }\n    }\n  }\n\n  getNoOfEvents(day){\n    return this.markedDays.reduce(function (n, i) {\n      var p = (i == day)? 1:0;\n      return n + p;\n  }, 0);\n  }\n  listEvents(day){\n    if(day != 0){\n      document.location.href = '#listAnchor';\n    }\n    this.eventsToList = [];\n    for(let event of this.events) {\n      let startDay = new Date(event.start).getDate();\n      let endDay = new Date(event.end).getDate();\n      if((day >= startDay && day<= endDay) || day == 0){\n        let push =\n            {id: event.id,\n             name: event.name,\n             description: event.description,\n             startDate: new Date(event.start),\n             endDate: new Date(event.end)\n            }\n        this.eventsToList.push(push);\n      }\n    }\n  }\n\n  isDayMarked(day){\n    if(this.markedDays.find(element => element == day)){\n      return true;\n    }\n    else\n      return false;\n  }\n\n  setMonthIndex(){\n    this.monthIndex = new Date(`${this.currentYear}-${this.monthInteger}-01`).getDay()\n  }\n  setDaysInMonth(){\n    this.daysInMonth =  this.getDaysInMonth(this.monthInteger, this.currentYear);\n  }\n  getDaysInMonth (month, year) {\n    return new Date(year, month, 0).getDate();\n  }\n  setCurrentMonth(){\n    this.currentMonth = this.months[this.monthInteger-1];\n  }\n  setTimestamp(){\n    this.firstDayTimestamp = new Date(`${this.currentYear}-${this.monthInteger}-01`).getTime();\n    this.lastDayTimestamp = new Date(`${this.currentYear}-${this.monthInteger}-${this.daysInMonth} 23:59`).getTime();\n  }\n\n  logout(){\n    window.sessionStorage.clear();\n    location.reload();\n  }\n\n  createRange(number){\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n        items.push(i);\n    }\n    return items;\n  }\n\n  nextM(){\n    if(this.monthInteger+1 > 12){\n      this.monthInteger = 1;\n      this.currentYear++;\n    }\n    else{\n      this.monthInteger++;\n    }\n    this.updateCalendar();\n  }\n\n  prevM(){\n    if(this.monthInteger-1 < 1){\n      this.monthInteger = 12;\n      this.currentYear--;\n    }\n    else{\n      this.monthInteger--;\n    }\n    this.updateCalendar();\n  }\n\n  updateCalendar(){\n    this.setMonthIndex();\n    this.setDaysInMonth();\n    this.setCurrentMonth();\n    this.setTimestamp();\n    if(this.logged){\n      this.markedDays = []\n      this.events = [];\n      this.getEvents();\n    }\n  }\n}\n","    <div class=\"topBar\">\n        <div class=\"userBox\" *ngIf=\"logged\">\n          <img src=\"./../../assets/icons/account_circle-24px.svg\">\n          {{ user.name }}\n          <div class=\"userBox-dropdown\">\n            <a href=\"/newEvent\"><img src=\"./../../assets/icons/baseline_add_circle_outline_black_18dp.png\" height=\"24px\">Add Event</a>\n            <a href=\"#\"><img src=\"./../../assets/icons/baseline_list_alt_black_18dp.png\" height=\"24px\">My Events</a>\n          </div>\n        </div>\n        <div class=\"logoLink\">\n          <a href=\"#\" class=\"logo\">\n           <p>\n\n            event<img src=\"./../../assets/icons/calendar-icon-png-black-3.png\" height=\"24px\">calendar\n           </p>\n          </a>\n        </div>\n        <div class=\"menu\">\n          <a href=\"#\" *ngIf=\"logged\">\n            <img src=\"./../../assets/icons/baseline_notification_important_black_18dp.png\" height=\"24px\">\n            <span class=\"notification\"></span>\n          </a>\n          <a href=\"/login\" *ngIf=\"!logged\">Login</a>\n          <a href=\"#\" *ngIf=\"logged\" (click)=\"logout()\">\n            <img src=\"./../../assets/icons/exit_to_app-24px.svg\" height=\"24px\"> Logout\n          </a>\n        </div>\n    </div>\n    <div class=\"containerMain\">\n      <div class=\"mes\">{{currentMonth}}, {{currentYear}}</div>\n        <div class=\"mainbox\">\n            <div class=\"div-table\">\n                <div class=\"div-row\" >\n                    <div class=\"div-weekday-cell\" *ngFor=\"let day of weekDay; let i = index\">\n                        <p >{{ day }}</p>\n                    </div>\n                </div>\n                <div class=\"div-row\" >\n                  <div class=\"div-cell\" *ngFor=\"let column of createRange(42); let i = index\">\n                    <p></p>\n                    <div (click)=\"listEvents(i-(monthIndex-1))\" [class.div-content]=\"isDayMarked(i-(monthIndex-1))\" *ngIf=\"i>=monthIndex && isDayMarked(i-(monthIndex-1)); else non_marked\">\n                        <p>{{ i-(monthIndex-1) }}</p>\n                        <span *ngIf=\"getNoOfEvents(i-(monthIndex-1)) > 1\" class=\"eventNo\">{{getNoOfEvents(i-(monthIndex-1))}}</span>\n                    </div>\n                    <ng-template #non_marked>\n                      <div *ngIf=\"i>=monthIndex && (i-(monthIndex-1))<=(daysInMonth )\">\n                          <a class=\"non_marked\" href=\"/newEvent\"><p>{{ i-(monthIndex-1) }}</p></a>\n                      </div>\n                    </ng-template>\n                  </div>\n                </div>\n\n              <div class=\"list\" id=\"listAnchor\">\n                <div class=\"item\" *ngFor=\"let event of eventsToList\">\n                  <div class=\"item-row\">\n                    <div class=\"days\">\n                      <div class=\"dayCircle\"><p>{{event.startDate.getDate()}}</p></div>\n                      <div class=\"dayCircle\" style=\"background-color:rgb(218, 4, 4)\"><p>{{event.endDate.getDate()}}</p></div>\n                    </div>\n                    <div class=\"days\">\n                      <div class=\"timeBox\">\n                        <p>\n                          {{event.startDate.getHours()}}h{{event.startDate.getMinutes() < 10? \"0\"+event.startDate.getMinutes():event.startDate.getMinutes()}}\n                        </p>\n                      </div>\n                      <div class=\"timeBox\">\n                        <p>\n                          {{event.endDate.getHours()}}h{{event.endDate.getMinutes() < 10? \"0\"+event.endDate.getMinutes():event.endDate.getMinutes()}}\n                        </p>\n                      </div>\n                    </div>\n                    <hr>\n                    <div class=\"title\">{{event.name}} </div>\n                  </div>\n\n                  <div class=\"item-row\">\n                    <div class=\"description\">{{event.description}} </div>\n                  </div>\n                  <div class=\"actionsMenu\">\n\n                  </div>\n                </div>\n\n              </div>\n            </div>\n\n        </div>\n    </div>\n    <div class=\"nextMonth\" (click)=\"nextM()\">\n      <img src=\"./../../assets/icons/navigate_next-24px.png\" width=\"24px\">\n    </div>\n    <div class=\"prevMonth\" (click)=\"prevM()\">\n      <img src=\"./../../assets/icons/navigate_before-24px.png\" width=\"24px\">\n    </div>\n\n\n\n","import { DataService } from './../services/data.service';\nimport { User } from './../models/user.model';\nimport { Component, OnInit } from '@angular/core';\nimport { finalize } from 'rxjs/operators'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email: string ='';\n  password: string='';\n  user: User;\n  errorMsg: string  = \"\";\n\n  constructor(private dataService: DataService ) {\n  }\n\n  ngOnInit(): void {\n    this.checklogged();\n  }\n\n  checklogged(){\n    let logged;\n    if(sessionStorage.getItem('user')!=null){\n      logged = JSON.parse(sessionStorage.getItem('user')).loginAuth;\n      if(logged)\n        window.location.href = this.dataService.localUrl;\n    }\n  }\n\n  loginReq(){\n    if(this.email == \"\"){\n      this.errorMsg = \"Email is required\";\n      return;\n    }\n    if(this.password == \"\"){\n      this.errorMsg = \"Password is required\";\n      return;\n    }\n    return this.dataService.login(this.email, this.password)\n    .pipe(\n      finalize(() => {\n        if(this.user.loginAuth){\n          this.startSession();\n          this.checklogged();\n        }\n        else{\n          this.errorMsg = \"Wrong email or password\";\n        }\n      }))\n    .subscribe(data => {this.user = data})\n  }\n  startSession(){\n    sessionStorage.setItem('user', JSON.stringify(this.user));\n  }\n\n}\n","<div class=\"containerMain\">\n    <div class=\"mainbox\">\n            <div class=\"div-row\" >\n                <div class=\"div-title\">\n                    <p>Login</p>\n                </div>\n                </div>\n            <div class=\"div-row\" >\n                <div class=\"div-form\">\n                    <form class=\"form-content\">\n                        <label class=\"label\">Email:</label>\n                        <input class=\"inputText\"  [(ngModel)]=\"email\" type=\"text\" name=\"email\" placeholder=\"Email\" required>\n                        <label class=\"label\">Password:</label>\n                        <input class=\"inputText\" [(ngModel)]=\"password\" type=\"password\" name=\"email\" placeholder=\"Password\" required>\n                        <div class=\"errorMsg\"> {{ errorMsg }}</div>\n                        <input class=\"inputBtn\" type=\"submit\" (click)=\"loginReq()\" value=\"Sign In\" />\n                    </form>\n                    <a href=\"/signup\" class=\"signup\">\n                        Doesn't have an account? Sign Up here<br>\n                    </a>\n                </div>\n            </div>\n    </div>\n</div>\n","import { User } from './../models/user.model';\nimport { finalize } from 'rxjs/operators';\nimport { DataService } from './../services/data.service';\nimport { Event } from './../models/event.model';\nimport { Component, OnInit } from '@angular/core';\nimport { Time } from '@angular/common';\n\n@Component({\n  selector: 'app-new-event',\n  templateUrl: './new-event.component.html',\n  styleUrls: ['./new-event.component.css']\n})\nexport class NewEventComponent implements OnInit {\n\n  name:string = \"\";\n  startDate: Date;\n  endDate: Date;\n  startDateStr: string = \"\";\n  endDateStr: string = \"\";\n  description:string = \"\";\n  event: Event = {\"id\": null, \"description\": this.description, \"name\": this.name,\n                  \"startDate\": this.startDate, \"endDate\": this.endDate};\n  user: User;\n  logged: number;\n  errorMsg: string  = \"\";\n  eventError: number = -1;\n\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.checklogged();\n  }\n\n  checklogged(){\n    if(sessionStorage.getItem('user')==null){\n        window.location.href = this.dataService.localUrl+\"/login\";\n    }\n    else{\n      this.user = JSON.parse(sessionStorage.getItem('user'))\n      this.logged = this.user.loginAuth;\n     }\n  }\n\n  checkRequirements(){\n    if(this.name == \"\"){\n      this.errorMsg = \"Event Name is required\";\n      return 0;\n    }\n    this.strToDate();\n    if(this.endDate == null){\n      this.errorMsg = \"End Date is required\";\n      return 0;\n    }\n    if(this.startDate == null){\n      this.errorMsg = \"Start Date is required\";\n      return 0;\n    }\n    if(this.description == \"\"){\n      this.errorMsg = \"Description is required\";\n      return 0;\n    }\n    if(this.startDate.getTime() > this.endDate.getTime()){\n      this.errorMsg = \"The end date must be after the start date\";\n      return 0;\n    }\n    return 1;\n  }\n  strToDate(){\n    if(this.startDateStr != \"\" && this.endDateStr != \"\"){\n      this.startDate = new Date(this.startDateStr);\n      this.endDate = new Date(this.endDateStr);\n    }\n  }\n\n  createEvent(){\n    if(this.checkRequirements()){\n      this.event.name = this.name;\n      this.event.description = this.description;\n      this.event.startDate = this.startDate;\n      this.event.endDate = this.endDate;\n      let creatorID = JSON.parse(sessionStorage.getItem('user')).id;\n\n\n      return this.dataService.createEvent(this.event, creatorID)\n      .pipe(\n        finalize(() => {\n          if(this.eventError == 0){\n            window.location.href = this.dataService.localUrl;\n          }\n          else if(this.eventError == 1){\n            this.errorMsg = \"This event ovelaps another event\";\n          }\n        }))\n      .subscribe(data => {\n        this.eventError = data.eventError;\n      })\n    }\n    }\n\n    logout(){\n      window.sessionStorage.clear();\n      location.reload();\n    }\n}\n","<div class=\"topBar\">\n  <div class=\"userBox\" *ngIf=\"logged\">\n    <img src=\"./../../assets/icons/account_circle-24px.svg\">\n    {{ user.name }}\n    <div class=\"userBox-dropdown\">\n      <a href=\"/newEvent\"><img src=\"./../../assets/icons/baseline_add_circle_outline_black_18dp.png\" height=\"24px\">Add Event</a>\n      <a href=\"#\"><img src=\"./../../assets/icons/baseline_list_alt_black_18dp.png\" height=\"24px\">My Events</a>\n    </div>\n  </div>\n  <div class=\"logoLink\">\n    <a href=\"#\" class=\"logo\">\n     <p>\n      event<img src=\"./../../assets/icons/calendar-icon-png-black-3.png\" height=\"24px\">calendar\n     </p>\n    </a>\n  </div>\n  <div class=\"menu\">\n    <div class=\"menuLink\">\n      <a href=\"#\" *ngIf=\"logged\"><img src=\"./../../assets/icons/baseline_notification_important_black_18dp.png\" height=\"24px\"></a>\n    </div>\n    <div class=\"menuLink\">\n      <a href=\"#\" *ngIf=\"logged\" (click)=\"logout()\">\n        <img src=\"./../../assets/icons/exit_to_app-24px.svg\" height=\"24px\"> Logout\n      </a>\n    </div>\n  </div>\n</div>\n<div class=\"containerMain\">\n\n  <a class=\"voltar\" href=\"/\"><img src=\"./../../assets/icons/baseline_arrow_back_black_18dp.png\" height=\"24px\">Voltar</a>\n\n  <div class=\"mainbox\">\n          <div class=\"div-row\" >\n              <div class=\"div-title\">\n                  <p >Create Event</p>\n              </div>\n              </div>\n          <div class=\"div-row\" >\n              <div class=\"div-form\">\n                  <form class=\"form-content\" action='./'>\n                      <label class=\"label\">* Event Name:</label>\n                      <input class=\"inputText\"  [(ngModel)]=\"name\" type=\"text\" name=\"eventName\" maxlength=\"100\" placeholder=\"Event Name\" required>\n                      <label class=\"label\">* Start Date:</label>\n                      <input class=\"inputText\" [(ngModel)]=\"startDateStr\" type=\"datetime-local\" name=\"startDate\"\n                                  placeholder=\"Descripition\" value=\"2018-06-13T19:30\" max=\"3000-01-01T00:00\" required>\n                      <label class=\"label\">* End Date:</label>\n                      <input class=\"inputText\" [(ngModel)]=\"endDateStr\" type=\"datetime-local\" name=\"endDate\"\n                                  placeholder=\"End Date\" value=\"2018-06-13T19:30\" max=\"3000-01-01T00:00\" required>\n                      <label class=\"label\">* Description:</label>\n                      <textarea class=\"inputText\" [(ngModel)]=\"description\" rows=\"4\" name=\"description\" placeholder=\"Descripition\" required>\n                      </textarea>\n                      <div class=\"errorMsg\"> {{ errorMsg }}</div>\n                      <input class=\"inputBtn\"  type=\"submit\" value=\"Create Event\" (click)=\"createEvent()\" />\n                  </form>\n              </div>\n          </div>\n  </div>\n</div>\n","import { User } from './../models/user.model';\nimport { Event } from './../models/event.model';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  localUrl: string = \"http://localhost:4200\";\n  baseUrl: string = \"http://localhost:3000\";\n\n\n  constructor(private _http: HttpClient) {}\n\n  login(email, password){\n    let apiUrl = this.baseUrl+\"/login/\";\n    let json ={\"email\": email, \"password\": password};\n\n    return this._http.post<User>(apiUrl, json);\n  }\n\n  signup(user : User){\n    let apiUrl = this.baseUrl+\"/createUser/\";\n    let json ={\"email\": user.email, \"password\": user.password, \"name\": user.name};\n    return this._http.post<any>(apiUrl, json);\n  }\n  createEvent(event : Event, creatorID){\n    let apiUrl = this.baseUrl+\"/createEvent/\";\n    let json ={\"name\": event.name, \"description\": event.description,\n               \"startDate\": event.startDate.getTime(), \"endDate\": event.endDate.getTime(), \"creatorID\": creatorID};\n    return this._http.post<any>(apiUrl, json);\n  }\n  getEventInterval(creatorID, start, end){\n    let apiUrl = this.baseUrl+`/eventInterval/${creatorID}/${start}/${end}`;\n    return this._http.get<any[]>(apiUrl);\n  }\n}\n","import { finalize } from 'rxjs/operators';\nimport { DataService } from './../services/data.service';\nimport { User } from './../models/user.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private dataService: DataService) { }\n\n  email: string = \"\";\n  password: string = \"\";\n  name: string = \"\";\n  user: User = {\"id\": null, \"email\": \"\", \"name\": \"\", \"password\": \"\", \"loginAuth\": 0};\n  userCheck:number = 0;\n  errorMsg: string  = \"\";\n\n  ngOnInit(): void {\n    this.checklogged();\n  }\n\n\n  signUser(){\n    if(this.name == \"\"){\n      this.errorMsg = \"Username is required.\";\n      return;\n    }\n    if(this.email == \"\"){\n      this.errorMsg = \"Email is required.\";\n      return;\n    }\n    if(this.password == \"\"){\n      this.errorMsg = \"Password is required.\";\n      return;\n    }\n    this.user.email = this.email;\n    this.user.name = this.name;\n    this.user.password = this.password;\n\n    return this.dataService.signup(this.user)\n    .pipe(\n      finalize(() => {\n        if(this.userCheck == 1){\n          this.errorMsg = \"Username already in use.\";\n        }\n        else if (this.userCheck == 2){\n          this.errorMsg = \"Email already in use.\";\n        }\n        else{\n          this.startSession();\n        }\n      }))\n    .subscribe(data => {\n      this.userCheck = data.userError;\n      if(this.userCheck == 0){\n        this.user = data.user\n      }\n    })\n\n  }\n  startSession(){\n    window.location.href = this.dataService.localUrl+\"/login\";\n  }\n\n  checklogged(){\n    let logged;\n    if(sessionStorage.getItem('user')!=null){\n      logged = JSON.parse(sessionStorage.getItem('user')).loginAuth;\n      if(logged)\n        window.location.href = this.dataService.localUrl;\n    }\n  }\n\n}\n","<div class=\"containerMain\">\n    <div class=\"mainbox\">\n            <div class=\"div-row\" >\n                <div class=\"div-title\">\n                    <p >Sign Up</p>\n                </div>\n                </div>\n            <div class=\"div-row\" >\n                <div class=\"div-form\">\n                    <form class=\"form-content\" action='./'>\n                      <label class=\"label\">* Username:</label>\n                        <input class=\"inputText\"  [(ngModel)]=\"name\" type=\"text\" name=\"name\" placeholder=\"Username\" required>\n                        <label class=\"label\">* Email:</label>\n                        <input class=\"inputText\"  [(ngModel)]=\"email\" type=\"text\" name=\"email\" placeholder=\"Email\" required>\n                        <label class=\"label\">* Password:</label>\n                        <input class=\"inputText\" [(ngModel)]=\"password\" type=\"password\" name=\"password\" placeholder=\"Password\" required>\n                        <div class=\"errorMsg\"> {{ errorMsg }}</div>\n                        <input class=\"inputBtn\"  type=\"submit\" value=\"Sign Up\" (click)=\"signUser()\"/>\n                    </form>\n                    <a href=\"/login\" class=\"signup\">\n                        Already have an account? Login here\n                    </a>\n                </div>\n            </div>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}