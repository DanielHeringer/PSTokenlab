{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/edit-event/edit-event.component.ts","webpack:///src/app/edit-event/edit-event.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/new-event/new-event.component.ts","webpack:///src/app/new-event/new-event.component.html","webpack:///src/app/services/data.service.ts","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","EditEventComponent","dataService","route","startDateStr","endDateStr","description","event","name","startDate","endDate","errorMsg","eventError","updated","checklogged","getEvent","snapshot","paramMap","get","sessionStorage","getItem","window","location","href","localUrl","user","JSON","parse","logged","loginAuth","strToDate","getTime","Date","pipe","data","start","toISOString","end","slice","subscribe","auth","checkRequirements","creatorID","editEvent","clear","reload","updateEvent","HomeComponent","dayOfweek","getDay","weekDay","months","monthInteger","getMonth","currentYear","getFullYear","eventsToList","markedDays","actionLoginText","setMonthIndex","setDaysInMonth","setCurrentMonth","setTimestamp","getEvents","getEventInterval","firstDayTimestamp","lastDayTimestamp","markDays","listEvents","events","startDay","getDate","endDay","i","push","day","reduce","n","p","document","find","element","monthIndex","daysInMonth","getDaysInMonth","month","year","currentMonth","number","items","updateCalendar","deleteEvent","date","dateStr","param","nextM","prevM","LoginComponent","email","password","login","startSession","setItem","stringify","loginReq","NewEventComponent","createEvent","DataService","_http","baseUrl","apiUrl","json","post","put","delete","providedIn","SignupComponent","userCheck","signup","userError","signUser","environment","production","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { EditEventComponent } from './edit-event/edit-event.component';\nimport { NewEventComponent } from './new-event/new-event.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'signup', component: SignupComponent},\n  { path: 'newEvent/:date', component: NewEventComponent},\n  { path: 'editEvent/:id/:updated', component: EditEventComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'PSTokenlab';\n}\n","\n\n<header>\n  <div class=\"container\">\n    <a href=\"#\" class=\"logo\"></a>\n  </div>\n</header>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { SignupComponent } from './signup/signup.component';\nimport { DataService } from './services/data.service';\nimport { NewEventComponent } from './new-event/new-event.component';\nimport { EditEventComponent } from './edit-event/edit-event.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    SignupComponent,\n    NewEventComponent,\n    EditEventComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { User } from './../models/user.model';\nimport { finalize } from 'rxjs/operators';\nimport { DataService } from './../services/data.service';\nimport { Event } from './../models/event.model';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-event',\n  templateUrl: './edit-event.component.html',\n  styleUrls: ['./edit-event.component.css']\n})\nexport class EditEventComponent implements OnInit {\n\n  name:string;\n  startDate: Date;\n  endDate: Date;\n  startDateStr: string = \"\";\n  endDateStr: string = \"\";\n  description:string = \"\";\n  event: Event = {\"id\": null, \"description\": this.description, \"name\": this.name,\n                  \"startDate\": this.startDate, \"endDate\": this.endDate};\n  user: User;\n  logged: number;\n  errorMsg: string  = \"\";\n  eventError: number = -1;\n  updated = 0;\n  data;\n\n\n  constructor(private dataService: DataService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.checklogged();\n    this.getEvent(this.route.snapshot.paramMap.get('id'));\n    this.updated = +this.route.snapshot.paramMap.get('updated');\n  }\n\n  checklogged(){\n    if(sessionStorage.getItem('user')==null){\n        window.location.href = this.dataService.localUrl+\"/login\";\n    }\n    else{\n      this.user = JSON.parse(sessionStorage.getItem('user'))\n      this.logged = this.user.loginAuth;\n     }\n  }\n\n  checkRequirements(){\n    if(this.name == \"\"){\n      this.errorMsg = \"Event Name is required\";\n      return 0;\n    }\n    this.strToDate();\n    if(this.endDate == null){\n      this.errorMsg = \"End Date is required\";\n      return 0;\n    }\n    if(this.startDate == null){\n      this.errorMsg = \"Start Date is required\";\n      return 0;\n    }\n    if(this.description == \"\"){\n      this.errorMsg = \"Description is required\";\n      return 0;\n    }\n    if(this.startDate.getTime() > this.endDate.getTime()){\n      this.errorMsg = \"The end date must be after the start date\";\n      return 0;\n    }\n    return 1;\n  }\n  strToDate(){\n    if(this.startDateStr != \"\" && this.endDateStr != \"\"){\n      this.startDate = new Date(this.startDateStr);\n      this.endDate = new Date(this.endDateStr);\n    }\n  }\n\n  getEvent(id){\n    return this.dataService.getEvent(id, this.user.id)\n    .pipe(\n      finalize(() => {\n        this.name = this.data.name;\n        let start = new Date(this.data.start).toISOString(), end = new Date(this.data.end).toISOString();\n        this.startDateStr = start.slice(0,16);\n        this.endDateStr = end.slice(0,16);\n        this.description = this.data.description;\n      }))\n    .subscribe(data => {\n      if(data[0].auth){\n        this.data = data[0];\n      }\n      else{\n        window.location.href = this.dataService.localUrl;\n      }\n    })\n  }\n\n  updateEvent(){\n    if(this.checkRequirements()){\n      this.event.id = this.data.id;\n      this.event.name = this.name;\n      this.event.description = this.description;\n      this.event.startDate = this.startDate;\n      this.event.endDate = this.endDate;\n      let creatorID = JSON.parse(sessionStorage.getItem('user')).id;\n\n\n      return this.dataService.editEvent(this.event, creatorID)\n      .subscribe(data => {\n        if(data.eventError==0){\n          window.location.href = this.dataService.localUrl + \"/editEvent/\" + this.data.id + \"/1\";\n        }\n      })\n    }\n  }\n\n  logout(){\n    window.sessionStorage.clear();\n    location.reload();\n  }\n}\n","<div class=\"topBar\">\n  <div class=\"userBox\" *ngIf=\"logged\">\n    <img src=\"./../../assets/icons/account_circle-24px.svg\">\n    {{ user.name }}\n    <div class=\"userBox-dropdown\">\n      <a href=\"/newEvent\"><img src=\"./../../assets/icons/baseline_add_circle_outline_black_18dp.png\" height=\"24px\">Add Event</a>\n      <a href=\"#\"><img src=\"./../../assets/icons/baseline_list_alt_black_18dp.png\" height=\"24px\">My Events</a>\n    </div>\n  </div>\n  <div class=\"logoLink\">\n    <a href=\"#\" class=\"logo\">\n     <p>\n      event<img src=\"./../../assets/icons/calendar-icon-png-black-3.png\" height=\"24px\">calendar\n     </p>\n    </a>\n  </div>\n  <div class=\"menu\">\n    <div class=\"menuLink\">\n      <a href=\"#\" *ngIf=\"logged\"><img src=\"./../../assets/icons/baseline_notification_important_black_18dp.png\" height=\"24px\"></a>\n    </div>\n    <div class=\"menuLink\">\n      <a href=\"#\" *ngIf=\"logged\" (click)=\"logout()\">\n        <img src=\"./../../assets/icons/exit_to_app-24px.svg\" height=\"24px\"> Logout\n      </a>\n    </div>\n  </div>\n</div>\n<div class=\"containerMain\">\n\n  <a class=\"voltar\" href=\"/\"><img src=\"./../../assets/icons/baseline_arrow_back_black_18dp.png\" height=\"24px\">Voltar</a>\n\n  <div class=\"mainbox\">\n          <div class=\"div-row\" >\n              <div class=\"div-title\">\n                  <p >Edit Event</p>\n              </div>\n              </div>\n          <div class=\"div-row\" >\n              <div class=\"div-form\">\n                  <form class=\"form-content\" action='./'>\n                      <label class=\"label\">* Event Name:</label>\n                      <input class=\"inputText\"  [(ngModel)]=\"name\" type=\"text\" name=\"eventName\" maxlength=\"100\" placeholder=\"Event Name\" required>\n                      <label class=\"label\">* Start Date:</label>\n                      <input class=\"inputText\" [(ngModel)]=\"startDateStr\" type=\"datetime-local\" name=\"startDate\"\n                                  placeholder=\"Descripition\" value=\"2018-06-13T19:30\" max=\"3000-01-01T00:00\" required>\n                      <label class=\"label\">* End Date:</label>\n                      <input class=\"inputText\" [(ngModel)]=\"endDateStr\" type=\"datetime-local\" name=\"endDate\"\n                                  placeholder=\"End Date\" value=\"2018-06-13T19:30\" max=\"3000-01-01T00:00\" required>\n                      <label class=\"label\">* Description:</label>\n                      <textarea class=\"inputText\" [(ngModel)]=\"description\" rows=\"4\" name=\"description\" placeholder=\"Descripition\" required>\n                      </textarea>\n                      <div class=\"errorMsg\"> {{ errorMsg }}</div>\n                      <input class=\"inputBtn\"  type=\"submit\" value=\"Edit Event\" (click)=\"updateEvent()\" />\n                  </form>\n              </div>\n          </div>\n  </div>\n\n</div>\n<div class=\"pageBlock\" *ngIf=\"updated\">\n  <div class=\"msgBox\">\n    <div class=\"msg\">\n      Event updated successfully\n    </div>\n  </div>\n</div>\n","import { Event } from './../models/event.model';\nimport { finalize } from 'rxjs/operators';\nimport { DataService } from './../services/data.service';\nimport { User } from './../models/user.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\n\nexport class HomeComponent implements OnInit {\n\n  user: User;\n  dayOfweek: number = new Date().getDay();\n  weekDay: string[] = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n  months: string[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  currentMonth: string;\n  monthInteger: number = new Date().getMonth() + 1;\n  currentYear: number = new Date().getFullYear();\n  daysInMonth: number;\n  monthIndex: number;\n  firstDayTimestamp: number;\n  lastDayTimestamp: number;\n  logged: number = 0;\n  events;\n  eventsToList: Event[] = [];\n  markedDays:number[] = [];\n  actionLoginText: string = \"Login\";\n\n\n  constructor(private dataService: DataService) {\n    this.setMonthIndex();\n    this.setDaysInMonth();\n    this.setCurrentMonth();\n    this.setTimestamp();\n  }\n\n  ngOnInit(): void {\n    if(sessionStorage.getItem('user')!=null){\n    this.user = JSON.parse(sessionStorage.getItem('user'))\n    this.logged = this.user.loginAuth;\n    if(this.logged){\n      this.getEvents();\n    }\n    }\n    else{\n      this.logged = 0;\n    }\n  }\n\n  getEvents(){\n    return this.dataService.getEventInterval(this.user.id, this.firstDayTimestamp, this.lastDayTimestamp)\n    .pipe(\n      finalize(() => {\n        this.markDays();\n        this.listEvents(0);\n      }))\n    .subscribe(data => {\n      this.events = data;\n    })\n  }\n\n  markDays(){\n    for(let event of this.events) {\n      let startDay = new Date(event.start).getDate();\n      let endDay = new Date(event.end).getDate();\n      for(let i=startDay; i<=endDay; i++){\n        this.markedDays.push(i);\n      }\n    }\n  }\n\n  getNoOfEvents(day){\n    return this.markedDays.reduce(function (n, i) {\n      var p = (i == day)? 1:0;\n      return n + p;\n  }, 0);\n  }\n  listEvents(day){\n    if(day != 0){\n      document.location.href = '#listAnchor';\n    }\n    this.eventsToList = [];\n    for(let event of this.events) {\n      let startDay = new Date(event.start).getDate();\n      let endDay = new Date(event.end).getDate();\n      if((day >= startDay && day<= endDay) || day == 0){\n        let push =\n            {id: event.id,\n             name: event.name,\n             description: event.description,\n             startDate: new Date(event.start),\n             endDate: new Date(event.end)\n            }\n        this.eventsToList.push(push);\n      }\n    }\n  }\n\n  isDayMarked(day){\n    if(this.markedDays.find(element => element == day)){\n      return true;\n    }\n    else\n      return false;\n  }\n\n  setMonthIndex(){\n    this.monthIndex = new Date(`${this.currentYear}-${this.monthInteger}-01`).getDay()\n  }\n  setDaysInMonth(){\n    this.daysInMonth =  this.getDaysInMonth(this.monthInteger, this.currentYear);\n  }\n  getDaysInMonth (month, year) {\n    return new Date(year, month, 0).getDate();\n  }\n  setCurrentMonth(){\n    this.currentMonth = this.months[this.monthInteger-1];\n  }\n  setTimestamp(){\n    this.firstDayTimestamp = new Date(`${this.currentYear}-${this.monthInteger}-01`).getTime();\n    this.lastDayTimestamp = new Date(`${this.currentYear}-${this.monthInteger}-${this.daysInMonth} 23:59`).getTime();\n  }\n\n  logout(){\n    window.sessionStorage.clear();\n    location.reload();\n  }\n\n  createRange(number){\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n        items.push(i);\n    }\n    return items;\n  }\n\n  nextM(){\n    if(this.monthInteger+1 > 12){\n      this.monthInteger = 1;\n      this.currentYear++;\n    }\n    else{\n      this.monthInteger++;\n    }\n    this.updateCalendar();\n  }\n\n  prevM(){\n    if(this.monthInteger-1 < 1){\n      this.monthInteger = 12;\n      this.currentYear--;\n    }\n    else{\n      this.monthInteger--;\n    }\n    this.updateCalendar();\n  }\n\n  updateCalendar(){\n    this.setMonthIndex();\n    this.setDaysInMonth();\n    this.setCurrentMonth();\n    this.setTimestamp();\n    if(this.logged){\n      this.markedDays = []\n      this.events = [];\n      this.getEvents();\n    }\n  }\n\n  delete(id){\n    return this.dataService.deleteEvent(id)\n    .pipe(\n      finalize(() => {\n        this.updateCalendar();\n      }))\n    .subscribe(data => {\n    })\n  }\n  editEvent(id){\n    window.location.href = this.dataService.localUrl + \"/editEvent/\" + id + \"/0\";\n  }\n  redirectToNew(day){\n    let date = new Date(`${this.currentYear}-${this.monthInteger}-${day}`)\n    let dateStr = date.toISOString();\n    let param = dateStr.slice(0,16);\n    window.location.href = this.dataService.localUrl + '/newEvent/' + param;\n  }\n}\n","    <div class=\"topBar\">\n        <div class=\"userBox\" *ngIf=\"logged\">\n          <img src=\"./../../assets/icons/account_circle-24px.svg\">\n          {{ user.name }}\n          <div class=\"userBox-dropdown\">\n            <a href=\"/newEvent/default\"><img src=\"./../../assets/icons/baseline_add_circle_outline_black_18dp.png\" height=\"24px\">Add Event</a>\n            <a href=\"#\"><img src=\"./../../assets/icons/baseline_list_alt_black_18dp.png\" height=\"24px\">My Events</a>\n          </div>\n        </div>\n        <div class=\"logoLink\">\n          <a href=\"#\" class=\"logo\">\n           <p>\n\n            event<img src=\"./../../assets/icons/calendar-icon-png-black-3.png\" height=\"24px\">calendar\n           </p>\n          </a>\n        </div>\n        <div class=\"menu\">\n          <a href=\"#\" *ngIf=\"logged\">\n            <img src=\"./../../assets/icons/baseline_notification_important_black_18dp.png\" height=\"24px\">\n            <span class=\"notification\"></span>\n          </a>\n          <a href=\"/login\" *ngIf=\"!logged\">Login</a>\n          <a href=\"#\" *ngIf=\"logged\" (click)=\"logout()\">\n            <img src=\"./../../assets/icons/exit_to_app-24px.svg\" height=\"24px\"> Logout\n          </a>\n        </div>\n    </div>\n    <div class=\"containerMain\">\n      <div class=\"mes\">{{currentMonth}}, {{currentYear}}</div>\n        <div class=\"mainbox\">\n            <div class=\"div-table\">\n                <div class=\"div-row\" >\n                    <div class=\"div-weekday-cell\" *ngFor=\"let day of weekDay; let i = index\">\n                        <p >{{ day }}</p>\n                    </div>\n                </div>\n                <div class=\"div-row\" >\n                  <div class=\"div-cell\" *ngFor=\"let column of createRange(42); let i = index\">\n                    <p></p>\n                    <div (click)=\"listEvents(i-(monthIndex-1))\" [class.div-content]=\"isDayMarked(i-(monthIndex-1))\" *ngIf=\"i>=monthIndex && isDayMarked(i-(monthIndex-1)); else non_marked\">\n                        <p>{{ i-(monthIndex-1) }}</p>\n                        <span *ngIf=\"getNoOfEvents(i-(monthIndex-1)) > 1\" class=\"eventNo\">{{getNoOfEvents(i-(monthIndex-1))}}</span>\n                    </div>\n                    <ng-template #non_marked>\n                      <div *ngIf=\"i>=monthIndex && (i-(monthIndex-1))<=(daysInMonth )\">\n                          <a class=\"non_marked\" (click)=\"redirectToNew((i-(monthIndex-1)))\"><p>{{ i-(monthIndex-1) }}</p></a>\n                      </div>\n                    </ng-template>\n                  </div>\n                </div>\n\n              <div class=\"list\" id=\"listAnchor\">\n                <div class=\"item\" *ngFor=\"let event of eventsToList\">\n                  <div class=\"item-row\">\n                    <div class=\"days\">\n                      <div class=\"dayCircle\"><p>{{event.startDate.getDate()}}</p></div>\n                      <div class=\"dayCircle\" style=\"background-color:rgb(218, 4, 4)\"><p>{{event.endDate.getDate()}}</p></div>\n                    </div>\n                    <div class=\"days\">\n                      <div class=\"timeBox\">\n                        <p>\n                          {{event.startDate.getHours()}}h{{event.startDate.getMinutes() < 10? \"0\"+event.startDate.getMinutes():event.startDate.getMinutes()}}\n                        </p>\n                      </div>\n                      <div class=\"timeBox\">\n                        <p>\n                          {{event.endDate.getHours()}}h{{event.endDate.getMinutes() < 10? \"0\"+event.endDate.getMinutes():event.endDate.getMinutes()}}\n                        </p>\n                      </div>\n                    </div>\n                    <hr>\n                    <div class=\"title\">{{event.name}} </div>\n\n                  <div class=\"actionMenu\">\n                    <span class=\"invite\"><img src=\"./../../assets/icons/baseline_mail_outline_black_18dp.png\" height=\"24px\"></span>\n                    <span class=\"edit\" (click)=\"editEvent(event.id)\"><img src=\"./../../assets/icons/baseline_edit_black_18dp.png\" height=\"24px\"></span>\n                    <span class=\"delete\" (click)=\"delete(event.id)\"><img src=\"./../../assets/icons/baseline_delete_white_18dp.png\" height=\"24px\"></span>\n                </div>\n                  </div>\n\n                  <div class=\"item-row\">\n                    <div class=\"description\">{{event.description}} </div>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n\n        </div>\n    </div>\n    <div class=\"nextMonth\" (click)=\"nextM()\">\n      <img src=\"./../../assets/icons/navigate_next-24px.png\" width=\"24px\">\n    </div>\n    <div class=\"prevMonth\" (click)=\"prevM()\">\n      <img src=\"./../../assets/icons/navigate_before-24px.png\" width=\"24px\">\n    </div>\n\n\n\n","import { DataService } from './../services/data.service';\nimport { User } from './../models/user.model';\nimport { Component, OnInit } from '@angular/core';\nimport { finalize } from 'rxjs/operators'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email: string ='';\n  password: string='';\n  user: User;\n  errorMsg: string  = \"\";\n\n  constructor(private dataService: DataService ) {\n  }\n\n  ngOnInit(): void {\n    this.checklogged();\n  }\n\n  checklogged(){\n    let logged;\n    if(sessionStorage.getItem('user')!=null){\n      logged = JSON.parse(sessionStorage.getItem('user')).loginAuth;\n      if(logged)\n        window.location.href = this.dataService.localUrl;\n    }\n  }\n\n  loginReq(){\n    if(this.email == \"\"){\n      this.errorMsg = \"Email is required\";\n      return;\n    }\n    if(this.password == \"\"){\n      this.errorMsg = \"Password is required\";\n      return;\n    }\n    return this.dataService.login(this.email, this.password)\n    .pipe(\n      finalize(() => {\n        if(this.user.loginAuth){\n          this.startSession();\n          this.checklogged();\n        }\n        else{\n          this.errorMsg = \"Wrong email or password\";\n        }\n      }))\n    .subscribe(data => {this.user = data})\n  }\n  startSession(){\n    sessionStorage.setItem('user', JSON.stringify(this.user));\n  }\n\n}\n","<div class=\"containerMain\">\n    <div class=\"mainbox\">\n            <div class=\"div-row\" >\n                <div class=\"div-title\">\n                    <p>Login</p>\n                </div>\n                </div>\n            <div class=\"div-row\" >\n                <div class=\"div-form\">\n                    <form class=\"form-content\">\n                        <label class=\"label\">Email:</label>\n                        <input class=\"inputText\"  [(ngModel)]=\"email\" type=\"text\" name=\"email\" placeholder=\"Email\" required>\n                        <label class=\"label\">Password:</label>\n                        <input class=\"inputText\" [(ngModel)]=\"password\" type=\"password\" name=\"email\" placeholder=\"Password\" required>\n                        <div class=\"errorMsg\"> {{ errorMsg }}</div>\n                        <input class=\"inputBtn\" type=\"submit\" (click)=\"loginReq()\" value=\"Sign In\" />\n                    </form>\n                    <a href=\"/signup\" class=\"signup\">\n                        Doesn't have an account? Sign Up here<br>\n                    </a>\n                </div>\n            </div>\n    </div>\n</div>\n","import { User } from './../models/user.model';\nimport { finalize } from 'rxjs/operators';\nimport { DataService } from './../services/data.service';\nimport { Event } from './../models/event.model';\nimport { Component, OnInit } from '@angular/core';\nimport { Time } from '@angular/common';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-new-event',\n  templateUrl: './new-event.component.html',\n  styleUrls: ['./new-event.component.css']\n})\nexport class NewEventComponent implements OnInit {\n\n  name:string = \"\";\n  startDate: Date;\n  endDate: Date;\n  startDateStr: string = \"\";\n  endDateStr: string = \"\";\n  description:string = \"\";\n  event: Event = {\"id\": null, \"description\": this.description, \"name\": this.name,\n                  \"startDate\": this.startDate, \"endDate\": this.endDate};\n  user: User;\n  logged: number;\n  errorMsg: string  = \"\";\n  eventError: number = -1;\n\n  constructor(private dataService: DataService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.checklogged();\n    if(this.route.snapshot.paramMap.get('date') == \"default\"){\n      let date = new Date()\n      let dateStr = date.toISOString();\n      this.startDateStr = dateStr.slice(0,16);\n      this.endDateStr = dateStr.slice(0,16);\n    }\n    else{\n      this.startDateStr = this.route.snapshot.paramMap.get('date');\n      this.endDateStr = this.route.snapshot.paramMap.get('date');\n    }\n  }\n\n  checklogged(){\n    if(sessionStorage.getItem('user')==null){\n        window.location.href = this.dataService.localUrl+\"/login\";\n    }\n    else{\n      this.user = JSON.parse(sessionStorage.getItem('user'))\n      this.logged = this.user.loginAuth;\n     }\n  }\n\n  checkRequirements(){\n    if(this.name == \"\"){\n      this.errorMsg = \"Event Name is required\";\n      return 0;\n    }\n    this.strToDate();\n    if(this.endDate == null){\n      this.errorMsg = \"End Date is required\";\n      return 0;\n    }\n    if(this.startDate == null){\n      this.errorMsg = \"Start Date is required\";\n      return 0;\n    }\n    if(this.description == \"\"){\n      this.errorMsg = \"Description is required\";\n      return 0;\n    }\n    if(this.startDate.getTime() > this.endDate.getTime()){\n      this.errorMsg = \"The end date must be after the start date\";\n      return 0;\n    }\n    return 1;\n  }\n  strToDate(){\n    if(this.startDateStr != \"\" && this.endDateStr != \"\"){\n      this.startDate = new Date(this.startDateStr);\n      this.endDate = new Date(this.endDateStr);\n    }\n  }\n\n  createEvent(){\n    if(this.checkRequirements()){\n      this.event.name = this.name;\n      this.event.description = this.description;\n      this.event.startDate = this.startDate;\n      this.event.endDate = this.endDate;\n      let creatorID = JSON.parse(sessionStorage.getItem('user')).id;\n\n\n      return this.dataService.createEvent(this.event, creatorID)\n      .pipe(\n        finalize(() => {\n          if(this.eventError == 0){\n            window.location.href = this.dataService.localUrl;\n          }\n          else if(this.eventError == 1){\n            this.errorMsg = \"This event ovelaps another event\";\n          }\n        }))\n      .subscribe(data => {\n        this.eventError = data.eventError;\n      })\n    }\n    }\n\n    logout(){\n      window.sessionStorage.clear();\n      location.reload();\n    }\n}\n","<div class=\"topBar\">\n  <div class=\"userBox\" *ngIf=\"logged\">\n    <img src=\"./../../assets/icons/account_circle-24px.svg\">\n    {{ user.name }}\n    <div class=\"userBox-dropdown\">\n      <a href=\"/newEvent\"><img src=\"./../../assets/icons/baseline_add_circle_outline_black_18dp.png\" height=\"24px\">Add Event</a>\n      <a href=\"#\"><img src=\"./../../assets/icons/baseline_list_alt_black_18dp.png\" height=\"24px\">My Events</a>\n    </div>\n  </div>\n  <div class=\"logoLink\">\n    <a href=\"#\" class=\"logo\">\n     <p>\n      event<img src=\"./../../assets/icons/calendar-icon-png-black-3.png\" height=\"24px\">calendar\n     </p>\n    </a>\n  </div>\n  <div class=\"menu\">\n    <div class=\"menuLink\">\n      <a href=\"#\" *ngIf=\"logged\"><img src=\"./../../assets/icons/baseline_notification_important_black_18dp.png\" height=\"24px\"></a>\n    </div>\n    <div class=\"menuLink\">\n      <a href=\"#\" *ngIf=\"logged\" (click)=\"logout()\">\n        <img src=\"./../../assets/icons/exit_to_app-24px.svg\" height=\"24px\"> Logout\n      </a>\n    </div>\n  </div>\n</div>\n<div class=\"containerMain\">\n\n  <a class=\"voltar\" href=\"/\"><img src=\"./../../assets/icons/baseline_arrow_back_black_18dp.png\" height=\"24px\">Voltar</a>\n\n  <div class=\"mainbox\">\n          <div class=\"div-row\" >\n              <div class=\"div-title\">\n                  <p >Create Event</p>\n              </div>\n              </div>\n          <div class=\"div-row\" >\n              <div class=\"div-form\">\n                  <form class=\"form-content\" action='./'>\n                      <label class=\"label\">* Event Name:</label>\n                      <input class=\"inputText\"  [(ngModel)]=\"name\" type=\"text\" name=\"eventName\" maxlength=\"100\" placeholder=\"Event Name\" required>\n                      <label class=\"label\">* Start Date:</label>\n                      <input class=\"inputText\" [(ngModel)]=\"startDateStr\" type=\"datetime-local\" name=\"startDate\"\n                                  placeholder=\"Descripition\"  step=\"60\" max=\"3000-01-01T00:00\" required>\n                      <label class=\"label\">* End Date:</label>\n                      <input class=\"inputText\" [(ngModel)]=\"endDateStr\" type=\"datetime-local\" name=\"endDate\"\n                                  placeholder=\"End Date\" value=\"2018-06-13T19:30\" max=\"3000-01-01T00:00\" required>\n                      <label class=\"label\">* Description:</label>\n                      <textarea class=\"inputText\" [(ngModel)]=\"description\" rows=\"4\" name=\"description\" placeholder=\"Descripition\" required>\n                      </textarea>\n                      <div class=\"errorMsg\"> {{ errorMsg }}</div>\n                      <input class=\"inputBtn\"  type=\"submit\" value=\"Create Event\" (click)=\"createEvent()\" />\n                  </form>\n              </div>\n          </div>\n  </div>\n</div>\n","import { User } from './../models/user.model';\nimport { Event } from './../models/event.model';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  localUrl: string = \"http://localhost:4200\";\n  baseUrl: string = \"http://localhost:3000\";\n\n\n  constructor(private _http: HttpClient) {}\n\n  login(email, password){\n    let apiUrl = this.baseUrl+\"/login/\";\n    let json ={\"email\": email, \"password\": password};\n\n    return this._http.post<User>(apiUrl, json);\n  }\n\n  signup(user : User){\n    let apiUrl = this.baseUrl+\"/createUser/\";\n    let json ={\"email\": user.email, \"password\": user.password, \"name\": user.name};\n    return this._http.post<any>(apiUrl, json);\n  }\n  createEvent(event : Event, creatorID){\n    let apiUrl = this.baseUrl+\"/createEvent/\";\n    let json ={\"name\": event.name, \"description\": event.description,\n               \"startDate\": event.startDate.getTime(), \"endDate\": event.endDate.getTime(), \"creatorID\": creatorID};\n    return this._http.post<any>(apiUrl, json);\n  }\n  editEvent(event : Event, creatorID){\n    let apiUrl = this.baseUrl+\"/editEvent/\";\n    let json ={\"id\": event.id, \"name\": event.name, \"description\": event.description,\n               \"startDate\": event.startDate.getTime(), \"endDate\": event.endDate.getTime(), \"creatorID\": creatorID};\n    return this._http.put<any>(apiUrl, json);\n  }\n  getEventInterval(creatorID, start, end){\n    let apiUrl = this.baseUrl+`/eventInterval/${creatorID}/${start}/${end}`;\n    return this._http.get<any[]>(apiUrl);\n  }\n  getEvent(id, creatorID){\n    let apiUrl = this.baseUrl+`/event/${id}/${creatorID}`;\n    return this._http.get<any>(apiUrl);\n  }\n  deleteEvent(id){\n    let apiUrl = this.baseUrl+`/deleteEvent/`+id;\n    return this._http.delete<any[]>(apiUrl);\n  }\n}\n","import { finalize } from 'rxjs/operators';\nimport { DataService } from './../services/data.service';\nimport { User } from './../models/user.model';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private dataService: DataService) { }\n\n  email: string = \"\";\n  password: string = \"\";\n  name: string = \"\";\n  user: User = {\"id\": null, \"email\": \"\", \"name\": \"\", \"password\": \"\", \"loginAuth\": 0};\n  userCheck:number = 0;\n  errorMsg: string  = \"\";\n\n  ngOnInit(): void {\n    this.checklogged();\n  }\n\n\n  signUser(){\n    if(this.name == \"\"){\n      this.errorMsg = \"Username is required.\";\n      return;\n    }\n    if(this.email == \"\"){\n      this.errorMsg = \"Email is required.\";\n      return;\n    }\n    if(this.password == \"\"){\n      this.errorMsg = \"Password is required.\";\n      return;\n    }\n    this.user.email = this.email;\n    this.user.name = this.name;\n    this.user.password = this.password;\n\n    return this.dataService.signup(this.user)\n    .pipe(\n      finalize(() => {\n        if(this.userCheck == 1){\n          this.errorMsg = \"Username already in use.\";\n        }\n        else if (this.userCheck == 2){\n          this.errorMsg = \"Email already in use.\";\n        }\n        else{\n          this.startSession();\n        }\n      }))\n    .subscribe(data => {\n      this.userCheck = data.userError;\n      if(this.userCheck == 0){\n        this.user = data.user\n      }\n    })\n\n  }\n  startSession(){\n    window.location.href = this.dataService.localUrl+\"/login\";\n  }\n\n  checklogged(){\n    let logged;\n    if(sessionStorage.getItem('user')!=null){\n      logged = JSON.parse(sessionStorage.getItem('user')).loginAuth;\n      if(logged)\n        window.location.href = this.dataService.localUrl;\n    }\n  }\n\n}\n","<div class=\"containerMain\">\n    <div class=\"mainbox\">\n            <div class=\"div-row\" >\n                <div class=\"div-title\">\n                    <p >Sign Up</p>\n                </div>\n                </div>\n            <div class=\"div-row\" >\n                <div class=\"div-form\">\n                    <form class=\"form-content\" action='./'>\n                      <label class=\"label\">* Username:</label>\n                        <input class=\"inputText\"  [(ngModel)]=\"name\" type=\"text\" name=\"name\" placeholder=\"Username\" required>\n                        <label class=\"label\">* Email:</label>\n                        <input class=\"inputText\"  [(ngModel)]=\"email\" type=\"text\" name=\"email\" placeholder=\"Email\" required>\n                        <label class=\"label\">* Password:</label>\n                        <input class=\"inputText\" [(ngModel)]=\"password\" type=\"password\" name=\"password\" placeholder=\"Password\" required>\n                        <div class=\"errorMsg\"> {{ errorMsg }}</div>\n                        <input class=\"inputBtn\"  type=\"submit\" value=\"Sign Up\" (click)=\"signUser()\"/>\n                    </form>\n                    <a href=\"/login\" class=\"signup\">\n                        Already have an account? Login here\n                    </a>\n                </div>\n            </div>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}